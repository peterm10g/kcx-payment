<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsh.payment.core.dao.payLog.PayLogDao" >
  <resultMap id="BaseResultMap" type="com.lsh.payment.core.model.payLog.PayLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pay_id" property="payId" jdbcType="VARCHAR" />
    <result column="pay_payment_no" property="payPaymentNo" jdbcType="VARCHAR" />
    <result column="trade_id" property="tradeId" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="backresult" property="backresult" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="operate_time" property="operateTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pay_id, pay_payment_no, trade_id, pay_type, status, params, backresult, created_at, 
    updated_at, operate_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pay_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pay_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lsh.payment.core.model.payLog.PayLog" >
    insert into pay_log (id, pay_id, pay_payment_no, 
      trade_id, pay_type, status, 
      params, backresult, created_at, 
      updated_at, operate_time)
    values (#{id,jdbcType=BIGINT}, #{payId,jdbcType=VARCHAR}, #{payPaymentNo,jdbcType=VARCHAR}, 
      #{tradeId,jdbcType=VARCHAR}, #{payType,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{params,jdbcType=VARCHAR}, #{backresult,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lsh.payment.core.model.payLog.PayLog" >
    insert into pay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="payPaymentNo != null" >
        pay_payment_no,
      </if>
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="backresult != null" >
        backresult,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="payPaymentNo != null" >
        #{payPaymentNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null" >
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="backresult != null" >
        #{backresult,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsh.payment.core.model.payLog.PayLog" >
    update pay_log
    <set >
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="payPaymentNo != null" >
        pay_payment_no = #{payPaymentNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null" >
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="backresult != null" >
        backresult = #{backresult,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsh.payment.core.model.payLog.PayLog" >
    update pay_log
    set pay_id = #{payId,jdbcType=VARCHAR},
      pay_payment_no = #{payPaymentNo,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      params = #{params,jdbcType=VARCHAR},
      backresult = #{backresult,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      operate_time = #{operateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>